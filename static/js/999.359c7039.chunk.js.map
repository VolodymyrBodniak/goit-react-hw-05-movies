{"version":3,"file":"static/js/999.359c7039.chunk.js","mappings":"+SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,sCAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,qICRP,EAvBmB,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACpB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAMA,IAAMC,EAAQF,EAAaV,IAAI,UAQ/B,OACE,kBAAMa,SAPR,SAAsBC,GACpBA,EAAEC,iBACF,IAAMd,EAAOS,EAAaV,IAAI,UAC9BQ,EAASP,EACV,EAG+Be,UAAU,cAAxC,WACE,kBAAOC,KAAK,OAAOC,SAdvB,YAA+C,IAAZC,EAAW,EAArBC,OAAUD,MACzBR,EAARQ,EAAwB,CAAEE,OAAQF,GAA2B,CAAC,EAC/D,EAY+CA,MAAOP,GAAS,MAC5D,mBAAQK,KAAK,SAAb,sBAGL,E,kBCkDD,EApEe,WACb,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOf,EAAP,KAAagB,EAAb,KACA,GAAwBD,EAAAA,EAAAA,UAAS,MAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAuBpB,EAAAA,EAAAA,MACjBG,GADN,eAC2BZ,IAAI,WAE/B8B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOzB,EAAAA,EAAAA,IAAeC,GAFtB,QAERyB,EAFQ,QAGHC,QAAQC,OAAS,EAC1BP,GAAY,IAEZF,EAAQO,EAAOC,SACfN,GAAY,IAPA,gDAUdQ,QAAQC,IAAR,MAVc,yDAAH,qDAaX7B,GACFwB,GAEH,GAAE,CAACxB,KAEJe,EAAAA,EAAAA,WAAS,WACP,GAAIV,EAAO,CACT,IAAMmB,EAAS,mCAAG,gHAEYzB,EAAAA,EAAAA,IAAeM,GAF3B,gBAENqB,EAFM,EAENA,QACRR,EAAQQ,GAHM,gDAKdE,QAAQC,IAAR,MALc,yDAAH,qDAQXxB,GACFmB,GAEH,CACF,GAAE,IAEH,IAAMM,EACJb,GACAA,EAAKc,KAAI,YAA6B,IAA1BnC,EAAyB,EAAzBA,GAAIoC,EAAqB,EAArBA,eACd,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKrC,GAAMsC,MAAO,CAAEC,KAAMd,GAAYZ,UAAU,OAAxD,SACGuB,KAFIpC,EAMZ,IAKH,OACE,iBAAKa,UAAU,mBAAf,WACE,SAAC,EAAD,CAAYR,SANhB,SAAkBW,GAChBI,EAAQJ,EACT,IAKIO,IAAY,8CACXA,IAAY,eAAIV,UAAU,cAAd,SAA6BQ,GAAQa,MAGxD,C","sources":["api/api.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0048f87df3d0fc70e9be07ecb1359dc1';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCastById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieByName(name) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data;\n}\n","import { useSearchParams } from 'react-router-dom';\nimport './searchForm.css';\n\nconst SearchForm = ({ getMovie }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function handlerChange({ target: { value } }) {\n    value ? setSearchParams({ search: value }) : setSearchParams({});\n  }\n\n  const query = searchParams.get('search');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const data = searchParams.get('search');\n    getMovie(data);\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"search_form\">\n      <input type=\"text\" onChange={handlerChange} value={query || ''} />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { getMovieByName } from 'api/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport './movies.css';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n  const location = useLocation();\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchName = async () => {\n      try {\n        const result = await getMovieByName(name);\n        if (result.results.length < 1) {\n          setNotFound(true);\n        } else {\n          setList(result.results);\n          setNotFound(false);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (name) {\n      fetchName();\n    }\n  }, [name]);\n\n  useState(() => {\n    if (query) {\n      const fetchName = async () => {\n        try {\n          const { results } = await getMovieByName(query);\n          setList(results);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      if (query) {\n        fetchName();\n      }\n    }\n  }, []);\n\n  const resultList =\n    list &&\n    list.map(({ id, original_title }) => {\n      return (\n        <li key={id}>\n          <Link to={`${id}`} state={{ from: location }} className=\"item\">\n            {original_title}\n          </Link>\n        </li>\n      );\n    });\n  function getMovie(value) {\n    setName(value);\n  }\n\n  return (\n    <div className=\"container movies\">\n      <SearchForm getMovie={getMovie} />\n      {notFound && <h2>Nothing found...</h2>}\n      {!notFound && <ol className=\"search_list\">{list && resultList}</ol>}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieById","id","getCastById","getReviewsById","getMovieByName","name","getMovie","useSearchParams","searchParams","setSearchParams","query","onSubmit","e","preventDefault","className","type","onChange","value","target","search","useState","setName","list","setList","notFound","setNotFound","location","useLocation","useEffect","fetchName","result","results","length","console","log","resultList","map","original_title","to","state","from"],"sourceRoot":""}