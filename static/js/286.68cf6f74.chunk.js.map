{"version":3,"file":"static/js/286.68cf6f74.chunk.js","mappings":"+SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,sCAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,+ICEP,EA/BgB,WACd,IAAQE,GAAOK,EAAAA,EAAAA,MAAPL,GACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOR,EAAAA,EAAAA,IAAeF,GAFtB,OAERW,EAFQ,OAGdH,EAAQG,EAAOC,SAHD,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACV,IAEJ,IAAMe,EAAOR,EAAKS,KAAI,YAA8B,IAA3BhB,EAA0B,EAA1BA,GAAIiB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnC,OACE,2BACE,eAAGC,UAAU,SAAb,qBAA+BF,MAC/B,uBAAIC,MAFGlB,EAKZ,IAED,OAAOO,EAAKa,OAAS,GACnB,gEAEA,eAAID,UAAU,eAAd,SAA8BJ,GAEjC,C","sources":["api/api.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0048f87df3d0fc70e9be07ecb1359dc1';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCastById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieByName(name) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data;\n}\n","import { getReviewsById } from 'api/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './reviews.css';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const result = await getReviewsById(id);\n        setItem(result.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const list = item.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <p className=\"author\">Author: {author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return item.length < 1 ? (\n    <p>We dont have reviews for this movie</p>\n  ) : (\n    <ul className=\"reviews_list\">{list}</ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieById","id","getCastById","getReviewsById","getMovieByName","name","useParams","useState","item","setItem","useEffect","fetchCast","result","results","console","log","list","map","author","content","className","length"],"sourceRoot":""}