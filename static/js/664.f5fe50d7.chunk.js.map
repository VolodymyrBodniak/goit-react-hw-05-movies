{"version":3,"file":"static/js/664.f5fe50d7.chunk.js","mappings":"+SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,sCAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,+ICGP,EAhCa,WACX,IAAQE,GAAOK,EAAAA,EAAAA,MAAPL,GACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOT,EAAAA,EAAAA,IAAYD,GAFnB,OAERW,EAFQ,OAGdH,EAAQG,EAAOC,MAHD,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACV,IAEJ,IAAMe,EAAOR,EAAKS,KAAI,YAAiC,IAA9BhB,EAA6B,EAA7BA,GAAII,EAAyB,EAAzBA,KAAMa,EAAmB,EAAnBA,aACjC,OACE,2BACE,gBAAKC,UAAU,cAAf,UACE,gBACEC,IAAG,yCAAoCF,GACvCG,IAAKhB,OAGT,uBAAIA,MAPGJ,EAUZ,IAED,OAAO,wBAAKe,GACb,C","sources":["api/api.js","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0048f87df3d0fc70e9be07ecb1359dc1';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCastById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieByName(name) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data;\n}\n","import { getCastById } from 'api/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './cast.css';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const result = await getCastById(id);\n        setItem(result.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const list = item.map(({ id, name, profile_path }) => {\n    return (\n      <li key={id}>\n        <div className=\"profile_img\">\n          <img\n            src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n            alt={name}\n          />\n        </div>\n        <p>{name}</p>\n      </li>\n    );\n  });\n\n  return <ul>{list}</ul>;\n};\n\nexport default Cast;\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieById","id","getCastById","getReviewsById","getMovieByName","name","useParams","useState","item","setItem","useEffect","fetchCast","result","cast","console","log","list","map","profile_path","className","src","alt"],"sourceRoot":""}