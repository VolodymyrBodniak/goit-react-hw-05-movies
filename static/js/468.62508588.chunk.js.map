{"version":3,"file":"static/js/468.62508588.chunk.js","mappings":"+SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,sCAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,mHCTP,EAtBkB,WAChB,IAAMO,GAAWC,EAAAA,EAAAA,MACjB,OACE,iBAAKC,UAAU,aAAf,WACE,mDACA,gBAAIA,UAAU,kBAAd,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOC,MAAOJ,EAAvB,qBAIF,yBACE,SAAC,KAAD,CAAMG,GAAG,UAAUC,MAAOJ,EAA1B,2BAKJ,SAAC,KAAD,MAGL,E,SCkCD,EAnDa,WAAO,IAAD,IACTL,GAAOU,EAAAA,EAAAA,MAAPV,GACR,GAA0BW,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXV,GAAWC,EAAAA,EAAAA,MACXU,GAAkBC,EAAAA,EAAAA,QAAM,oBAACZ,EAASI,aAAV,aAAC,EAAgBS,YAAjB,QAAyB,KAYvD,OAVAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,IAAaC,GACVoB,MAAK,SAAAtB,GAAI,OAAIe,EAASf,EAAb,IACTuB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACtB,KAOF,iCACE,iBAAKO,UAAU,uBAAf,WACE,mBAAQkB,QAPd,WACEX,EAASE,EAAgBU,QAC1B,EAKkCnB,UAAU,WAAvC,sBAGA,iBAAKA,UAAU,eAAf,WACE,gBAAKA,UAAU,aAAf,UACE,gBACEoB,IAAG,0CAAqCf,EAAMgB,aAC9CC,IAAKjB,EAAMkB,OAASlB,EAAMR,KAC1B2B,MAAO,SAGX,iBAAKxB,UAAU,cAAf,WACE,cAAGA,UAAU,cAAb,SAA4BK,EAAMkB,OAASlB,EAAMR,QACjD,yCAAsC,GAArBQ,EAAMoB,cAAmBC,QAAQ,GAAlD,QACA,qCACA,uBAAIrB,EAAMsB,YACV,mCACA,uBACGtB,EAAMuB,QACLvB,EAAMuB,OAAOC,KAAI,gBAAGpC,EAAH,EAAGA,GAAII,EAAP,EAAOA,KAAP,OACf,4BAAgBA,EAAhB,MAAWJ,EADI,gBAO3B,SAAC,EAAD,CAAWA,GAAIA,MAGpB,C","sources":["api/api.js","components/MovieInfo/MovieInfo.jsx","pages/Card/Card.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0048f87df3d0fc70e9be07ecb1359dc1';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCastById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieByName(name) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data;\n}\n","import { Link, Outlet, useLocation } from 'react-router-dom';\nimport './movieInfo.css';\n\nconst MovieInfo = () => {\n  const location = useLocation();\n  return (\n    <div className=\"movie_info\">\n      <p>Additional information</p>\n      <ul className=\"movie_info_list\">\n        <li>\n          <Link to=\"cast\" state={location}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={location}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import { getMovieById } from 'api/api';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport './card.css';\n\nconst Card = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const locationForBack = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(id)\n      .then(data => setMovie(data))\n      .catch(error => console.log(error));\n  }, [id]);\n\n  function handleBack() {\n    navigate(locationForBack.current);\n  }\n\n  return (\n    <>\n      <div className=\"movie_card container\">\n        <button onClick={handleBack} className=\"btn_back\">\n          Go back\n        </button>\n        <div className=\"wrapper_card\">\n          <div className=\"poster_box\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title || movie.name}\n              width={400}\n            />\n          </div>\n          <div className=\"description\">\n            <p className=\"title_movie\">{movie.title || movie.name}</p>\n            <p>User Score: {(movie.vote_average * 10).toFixed(0)}%</p>\n            <p>Overview</p>\n            <p>{movie.overview}</p>\n            <p>Genres</p>\n            <p>\n              {movie.genres &&\n                movie.genres.map(({ id, name }) => (\n                  <span key={id}>{name} </span>\n                ))}\n            </p>\n          </div>\n        </div>\n      </div>\n      <MovieInfo id={id} />\n    </>\n  );\n};\n\nexport default Card;\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieById","id","getCastById","getReviewsById","getMovieByName","name","location","useLocation","className","to","state","useParams","useState","movie","setMovie","navigate","useNavigate","locationForBack","useRef","from","useEffect","then","catch","error","console","log","onClick","current","src","poster_path","alt","title","width","vote_average","toFixed","overview","genres","map"],"sourceRoot":""}